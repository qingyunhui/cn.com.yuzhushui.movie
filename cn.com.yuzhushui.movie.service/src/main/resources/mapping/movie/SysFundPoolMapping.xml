<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.yuzhushui.movie.sys.biz.dao.SysFundPoolDao">
	<resultMap type="cn.com.yuzhushui.movie.sys.biz.entity.SysFundPool" id="BaseResultMap">
        <result property="id" column="id" javaType="Integer"/>
        <result property="accountId" column="account_id" javaType="Integer"/>
        <result property="gold" column="gold" javaType="Long"/>
        <result property="creater" column="creater" javaType="String"/>
        <result property="createrId" column="creater_id" javaType="String"/>
        <result property="ctime" column="ctime" javaType="Date"/>
        <result property="comments" column="comments" javaType="String"/>
        <result property="deleted" column="deleted" javaType="Integer"/>
	</resultMap>
	
	<sql id="full-columns" >
        t.id,
        t.account_id,
        t.gold,
        t.creater,
        t.creater_id,
        t.ctime,
        t.comments,
        t.deleted
	</sql>

	<insert id="insert" parameterType="cn.com.yuzhushui.movie.sys.biz.entity.SysFundPool" >
		<![CDATA[
	        INSERT INTO sys_fund_pool (
	            account_id ,
	            gold ,
	            creater ,
	            creater_id ,
	            ctime ,
	            comments ,
	            deleted 
	        ) VALUES (
	        	#{accountId},
	        	#{gold},
	        	#{creater},
	        	#{createrId},
	        	#{ctime},
	        	#{comments},
	        	0
	        )
	    ]]>
    	<selectKey resultType="java.lang.Integer" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
        </selectKey>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List" >
		<![CDATA[
	        INSERT INTO sys_fund_pool (
	            account_id ,
	            gold ,
	            creater ,
	            creater_id ,
	            ctime ,
	            comments ,
	            deleted 
	        ) VALUES 
	        <foreach collection="list" item="item" index="index" separator=",">
	        (
	        	#{accountId},
	        	#{gold},
	        	#{creater},
	        	#{createrId},
	        	#{ctime},
	        	#{comments},
	        	0
	        )
	        </foreach>
	    ]]>
	</insert>
	
	<update id="delete" parameterType="java.lang.Integer">
        UPDATE sys_fund_pool SET deleted=1 
        WHERE deleted=0 AND
        	id = #{value}
	</update>
	<update id="deleteBatch" parameterType="list" >
        UPDATE sys_fund_pool SET deleted=1 
        WHERE deleted=0 AND
        	id IN 
        <foreach collection="list" item = "id" open="(" separator="," close=")">
        	#{id}
		</foreach>
	</update>
	
	<update id="update" parameterType="cn.com.yuzhushui.movie.sys.biz.entity.SysFundPool">
        UPDATE sys_fund_pool 
        <set>
            	account_id = #{accountId},
            	gold = #{gold},
            	creater = #{creater},
            	creater_id = #{createrId},
            	ctime = #{ctime},
            	comments = #{comments},
            	deleted = #{deleted},
        </set>
        WHERE deleted=0
        	AND id = #{id}
	</update>
	
	<update id="updateSelective" parameterType="cn.com.yuzhushui.movie.sys.biz.entity.SysFundPool">
        UPDATE sys_fund_pool 
        <set>
        	<if test="@OGNL@isNotEmpty(accountId)">
	            account_id = #{accountId},
	        </if>
        	<if test="@OGNL@isNotEmpty(gold)">
	            gold = #{gold},
	        </if>
        	<if test="@OGNL@isNotEmpty(creater)">
	            creater = #{creater},
	        </if>
        	<if test="@OGNL@isNotEmpty(createrId)">
	            creater_id = #{createrId},
	        </if>
        	<if test="@OGNL@isNotEmpty(ctime)">
	            ctime = #{ctime},
	        </if>
        	<if test="@OGNL@isNotEmpty(comments)">
	            comments = #{comments},
	        </if>
        	<if test="@OGNL@isNotEmpty(deleted)">
	            deleted = #{deleted},
	        </if>
        </set>
        WHERE deleted=0
        	AND id = #{id}
	</update>
	
	<select id="queryById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	   	SELECT <include refid="full-columns" />
       	<![CDATA[
       	FROM sys_fund_pool t
       	WHERE t.id = #{value} AND deleted=0
		]]>
    </select>
    
    <select id="queryFundPoolsByAccountId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	   	SELECT <include refid="full-columns" />
       	<![CDATA[
       		FROM sys_fund_pool t
       	WHERE t.account_id = #{value} AND deleted=0
		]]>
		ORDER BY t.ctime DESC
    </select>
	
	<select id="queryAll" parameterType="map" resultMap="BaseResultMap">
		SELECT <include refid="full-columns" />
	    FROM sys_fund_pool t
		<where>
			<if test="@OGNL@isNotEmpty(id)">
	            AND t.id = #{id}
	        </if>
			<if test="@OGNL@isNotEmpty(accountId)">
	            AND t.account_id = #{accountId}
	        </if>
			<if test="@OGNL@isNotEmpty(gold)">
	            AND t.gold = #{gold}
	        </if>
			<if test="@OGNL@isNotEmpty(creater)">
	            AND t.creater = #{creater}
	        </if>
			<if test="@OGNL@isNotEmpty(createrId)">
	            AND t.creater_id = #{createrId}
	        </if>
			<if test="@OGNL@isNotEmpty(ctime)">
	            AND t.ctime = #{ctime}
	        </if>
			<if test="@OGNL@isNotEmpty(comments)">
	            AND t.comments = #{comments}
	        </if>
			<if test="@OGNL@isNotEmpty(deleted)">
	            AND t.deleted = #{deleted}
	        </if>
		</where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
	</select>
	
	<select id="queryPage" parameterType="map" resultMap="BaseResultMap">
		SELECT 
        <include refid="full-columns" />
            FROM sys_fund_pool t
		<where>
	        <if test="@OGNL@isNotEmpty(id)">
	            AND t.id = #{id}
	        </if>
	        <if test="@OGNL@isNotEmpty(accountId)">
	            AND t.account_id = #{accountId}
	        </if>
	        <if test="@OGNL@isNotEmpty(gold)">
	            AND t.gold = #{gold}
	        </if>
	        <if test="@OGNL@isNotEmpty(creater)">
	            AND t.creater = #{creater}
	        </if>
	        <if test="@OGNL@isNotEmpty(createrId)">
	            AND t.creater_id = #{createrId}
	        </if>
	        <if test="@OGNL@isNotEmpty(ctime)">
	            AND t.ctime = #{ctime}
	        </if>
	        <if test="@OGNL@isNotEmpty(comments)">
	            AND t.comments = #{comments}
	        </if>
	        <if test="@OGNL@isNotEmpty(deleted)">
	            AND t.deleted = #{deleted}
	        </if>
		</where>
		<if test="@OGNL@isNotEmpty(orderColumn) ">
        ORDER BY t.${orderColumn} <if test="@OGNL@isNotEmpty(orderDirection) ">${orderDirection}</if>
        </if>
        LIMIT #{start}, #{pageSize}
	</select>

	<select id="queryCount" parameterType="map" resultType="java.lang.Integer">
		select count(id) FROM sys_fund_pool 
        <where>
	        	<if test="@OGNL@isNotEmpty(id)">
	            AND id = #{id}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(accountId)">
	            AND account_id = #{accountId}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(gold)">
	            AND gold = #{gold}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(creater)">
	            AND creater = #{creater}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(createrId)">
	            AND creater_id = #{createrId}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(ctime)">
	            AND ctime = #{ctime}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(comments)">
	            AND comments = #{comments}
	        	</if>
	        	<if test="@OGNL@isNotEmpty(deleted)">
	            AND deleted = #{deleted}
	        	</if>
        </where>
	</select>
	
	<!-- 统计用户历史充值总额 -->
	<select id="getTotalGoldByAccountId" parameterType="java.lang.Integer" resultType="java.lang.Long">
	   	SELECT  SUM(t.gold)
       		FROM sys_fund_pool t
       	WHERE t.account_id = #{value} AND deleted=0
    </select>
	
</mapper>
